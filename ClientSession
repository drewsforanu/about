import asyncio
import aiohttp

async def fetch(session, url):
    try:
        async with session.get(url) as response:
            return await response.text()
    except Exception as e:
        print(f"Error fetching {url}: {e}")
        return None

async def main():
    urls = [
        'https://www.example.com',
        'https://www.python.org',
        'https://www.github.com'
    ]
    async with aiohttp.ClientSession() as session:
        tasks = [fetch(session, url) for url in urls]
        pages = await asyncio.gather(*tasks)
        for url, content in zip(urls, pages):
            if content:
                print(f"Content from {url}: {len(content)} characters")
            else:
                print(f"Failed to fetch {url}")

if __name__ == '__main__':
    asyncio.run(main())
